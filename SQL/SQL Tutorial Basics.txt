-- Creating a database
CREATE DATABASE SqlTutorial;

-- Using the database
USE SqlTutorial;

-- Creating a table within the database
CREATE TABLE student (
	student_id INT PRIMARY KEY, -- Helps us uniquely identify the row
    student_name VARCHAR(100) NOT NULL, -- Will ensure that the data entered is not null
    student_major VARCHAR(100) DEFAULT "Undecided" -- If no data is entered, this is the default value
);

-- Describe the table that we have created
DESCRIBE student;

-- Alter table to add 2 additional columns
ALTER TABLE student ADD (student_address VARCHAR(100), student_phone int);

-- Delete the table that we have created
DROP TABLE student;

-- Insert values inside the table
INSERT INTO student 
VALUES 
(1, "Jack", "Biology"), 
(2, "Kate", "Sociology"), 
(3, "Claire", "English"),
(4, "Jack", "Biology"),
(5, "Mike", "Comp. Sci");

-- Display all information from the table
SELECT * FROM student; 
				
-- Before modifying data in tables, write this code so that the modification works
SET SQL_SAFE_UPDATES = 0;                
                
-- Update information in the table
UPDATE student 
SET student_major = "Binglish" -- We can also SET multiple things just by using a comma 
WHERE student_major = "Biology" OR student_major = "English"; 

-- Delete rows from table
INSERT INTO student VALUES (6, "Sayan", "Economics");
DELETE FROM student
WHERE student_id = 6;  

-- Different ways to use SELECT query
SELECT student_name, student_major -- Selecting multiple rows at a time
FROM student;

SELECT student.student_name
FROM student
ORDER BY student.student_name; -- Arranging names in aplhabetical order

SELECT * 
FROM student
ORDER BY student_major, student_id; -- This will first order by student_major and then by student_id

SELECT * 
FROM student
ORDER BY student_name -- Both can also be written together but ORDER BY shoudl come first
LIMIT 2; -- Limits the number of rows to 2

SELECT * 
FROM student
WHERE student_id >= 2; -- Not equals to in MYSQL is <>

SELECT * 
FROM student
WHERE student_name IN('Jack', 'Kate'); -- Will query all results where name is Jack, Kate
